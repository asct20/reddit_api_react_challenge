[{"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/index.js":"1","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/App.js":"2","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/reportWebVitals.js":"3","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/TopPosts/TopPosts.js":"4","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/Login/Login.js":"5","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/LinkToRedditAuth/LinkToRedditAuth.js":"6","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/config/RedditConfig.js":"7"},{"size":595,"mtime":1610762386000,"results":"8","hashOfConfig":"9"},{"size":1956,"mtime":1610764591000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610743417000,"results":"11","hashOfConfig":"9"},{"size":149,"mtime":1610764586000,"results":"12","hashOfConfig":"9"},{"size":930,"mtime":1610762893000,"results":"13","hashOfConfig":"9"},{"size":795,"mtime":1610761019000,"results":"14","hashOfConfig":"9"},{"size":289,"mtime":1610761042000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"184z8up",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/index.js",[],"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/App.js",[],"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/reportWebVitals.js",[],["33","34"],"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/TopPosts/TopPosts.js",["35","36"],"\nfunction TopPosts(props) {\n  const a = props.authToken;\nconst b = '';\n  return (\n    <div>\n      <h1>Top Posts</h1>\n\n      <p>{props.authToken}</p>\n    </div>\n  );\n}\n\nexport default TopPosts;","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/Login/Login.js",["37"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction Login(props) {\n  const history = useHistory();\n  const [showError, setShowError] = useState(false);\n  const searchParams = window.location.hash.replace('#', '');\n  const params = new URLSearchParams(searchParams);\n  const authToken = params.get('access_token');\n\n  const setToken = () => {\n    if (!authToken) {\n      setShowError(true);\n      return;\n    }\n\n    props.setAuthToken(authToken);\n    history.push('/TopPosts');\n  }\n\n  useEffect(setToken, []); // pass empty array to call the function only once\n\n  return (\n    <div>\n      <p>Authenticating with Reddit...</p>\n\n      {showError &&\n        <p>An error occurred, please <a href=\"/LinkToRedditAuth\">try again.</a></p>\n      }\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  setAuthToken: PropTypes.func.isRequired\n};\n\nexport default Login;","/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/components/LinkToRedditAuth/LinkToRedditAuth.js",[],"/Users/Alexandre/JOB_SEARCH/2021/Fortress/reddit_api_react_challenge/last_laugh/src/config/RedditConfig.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":9,"nodeType":"44","messageId":"45","endLine":3,"endColumn":10},{"ruleId":"42","severity":1,"message":"46","line":4,"column":7,"nodeType":"44","messageId":"45","endLine":4,"endColumn":8},{"ruleId":"47","severity":1,"message":"48","line":22,"column":23,"nodeType":"49","endLine":22,"endColumn":25,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","'b' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken', 'history', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [authToken, history, props]",{"range":"56","text":"57"},[590,592],"[authToken, history, props]"]